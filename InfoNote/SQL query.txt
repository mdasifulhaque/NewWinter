-- PRODUCT DETAILS VIEW ON TABLE
--hql :https://www.concretepage.com/hibernate/hibernate-hql-associations-and-inner-join-left-outer-join-right-outer-join-cross-join-example
select mpm.product_id
,mpm.product_code
,mpm.product_name
,mpm.product_desc
,pcm.category_desc || ' (' || pcm.category_code || ')' as product_category
,pum.uom_desc || ' (' || pum.uom_key || ')' as product_unit
,ppm.purchase_price
,ppm.sales_price
from mst_product_main mpm 
left outer join  product_category_main pcm on mpm.product_category = pcm.category_id
left outer join  product_uom_main pum on mpm.product_unit = pum.uom_id
left outer join  product_price_main ppm on mpm.product_id = ppm.product_code and ppm.price_active = 'true' and ppm.price_deleted = 'false'
;


https://stackoverflow.com/questions/4547672/return-multiple-fields-as-a-record-in-postgresql-with-pl-pgsql

CREATE OR REPLACE FUNCTION get_object_fields(name text)
  RETURNS TABLE (
     product_id   mst_product_main.product_id % type
    ,product_code mst_product_main.product_code % type
    ,product_name   mst_product_main.product_name % type
    ,product_desc mst_product_main.product_desc % type
  	,product_category varchar(255)
    ,product_unit  varchar(255)
    ,purchase_price product_price_main.purchase_price % type
    ,sales_price  product_price_main.sales_price % type
    ,activation_date product_price_main.activation_date % type
  )
AS 
$func$
BEGIN
    RETURN QUERY
    select mpm.product_id
		,mpm.product_code
		,mpm.product_name
        ,mpm.product_desc
        ,pcm.category_desc || ' (' || pcm.category_code || ')' as product_category
        ,pum.uom_desc || ' (' || pum.uom_key || ')' as product_unit
        ,ppm.purchase_price
        ,ppm.sales_price
        ,ppm.activation_date
    from mst_product_main mpm 
    left outer join  product_category_main pcm on mpm.product_category = pcm.category_id
    left outer join  product_uom_main pum on mpm.product_unit = pum.uom_id
    left outer join  product_price_main ppm on mpm.product_id = ppm.product_code and ppm.price_active = 'true' and ppm.price_deleted = 'false'
    LIMIT  100;  -- may be optional
END
$func$ LANGUAGE plpgsql; 